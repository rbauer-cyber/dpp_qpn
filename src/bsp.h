/*$file${.::bsp.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: dpp.qm
* File:  ${.::bsp.h}
*
* This code has been generated by QM 5.2.2 <www.state-machine.com/qm>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* SPDX-License-Identifier: GPL-3.0-or-later
*
* This generated code is open source software: you can redistribute it under
* the terms of the GNU General Public License as published by the Free
* Software Foundation.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
* more details.
*
* NOTE:
* Alternatively, this generated code may be distributed under the terms
* of Quantum Leaps commercial licenses, which expressly supersede the GNU
* General Public License and are specifically designed for licensees
* interested in retaining the proprietary status of their code.
*
* Contact information:
* <www.state-machine.com/licensing>
* <info@state-machine.com>
*/
/*$endhead${.::bsp.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef BSP_HPP
#define BSP_HPP

//============================================================================
// Board Support Package
// console.h defines all routines for displaying console messages with arduino
// uing the board USB connector to the computer.
#include "console.h"

#define ARRAY_SIZE(a) (sizeof(a)/sizeof(a[0]))

// various other constants for the application...
enum BSP_e {
    BSP_TICKS_PER_SEC = 100, // number of system clock ticks in one second
    LED_L             = 13,  // the pin number of the on-board LED (L)
    PHILO_0_PRIO      = 1,   // priority of the first Philo AO
    THINK_TIME        = 3*BSP_TICKS_PER_SEC, // time for thinking
    EAT_TIME          = 2*BSP_TICKS_PER_SEC  // time for eating
};

//#define SHOW_DEBUG

#ifdef SHOW_DEBUG
#define DEBUG(a) consoleDisplay(a)
#define DEBUG_ARGS(format, ...) consoleDisplayArgs(format, ##__VA_ARGS__)
#define DEBUG_STR_DEF(name,val) char_t const *name
#define DECLARE_AND_INIT(type, name, value) type name = value
#define STRING_PTR_ASSIGN(ptr, str) ptr = str
#define UNUSED(x)
#else
#define DEBUG(a)
#define DEBUG_ARGS(format, ...)
#define DEBUG_STR_DEF(name,val)
#define DECLARE_AND_INIT(type, name, value)
#define STRING_PTR_ASSIGN(ptr, str)
#define UNUSED(x) ((void)x)
#endif

void BSP_initTick();
void BSP_initSetup(void);
void BSP_displayPaused(uint8_t paused);
void BSP_displayPhilStat(uint8_t n, uint8_t dppSignal);

Q_DEFINE_THIS_MODULE("dpp")

#endif // BSP_HPP
